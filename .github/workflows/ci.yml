# Workflow name displayed on the GitHub Actions tab
name: Node.js CI

# Triggers: when to run the workflow
on:
  # Run on push events targeting the master branch
  push:
    branches: ["master"]
  # Run on pull request events targeting the master branch
  pull_request:
    branches: ["master"]

# Jobs to be executed
jobs:
  # Job name (can be anything)
  build-and-test:
    # The type of runner that the job will run on (latest Ubuntu)
    runs-on: ubuntu-latest

    # Strategy: allows running tests on different Node.js versions
    strategy:
      matrix:
        # Specify the Node.js versions you want to test on
        # LTS (Long Term Support) versions are recommended
        node-version: [18.x, 20.x]
        # See available versions: https://nodejs.org/en/about/releases/

    # Steps to perform within the job
    steps:
      # 1. Check out the repository code
      # Uses the standard GitHub action to get the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Node.js environment
      # Uses the standard action to install the specified Node.js version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # Use npm caching to speed up dependency installation
          cache: "npm"

      # 3. Install dependencies
      # Use 'npm ci' instead of 'npm install' for faster and more reliable installs
      # based on package-lock.json
      - name: Install dependencies
        run: npm ci

      # 4. Run tests and collect coverage
      # Use the test:coverage script
      - name: Run tests with coverage
        run: npm run test:coverage

      # 5. Upload coverage reports to Codecov
      # Use the official Codecov Action
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          # Optional for public repositories using standard report filenames (coverage/lcov.info etc)
          # token: ${{ secrets.CODECOV_TOKEN }} # Add CODECOV_TOKEN secret in repo settings if needed
          fail_ci_if_error: true # Fail CI if upload fails
          verbose: true # Show detailed Codecov action output


    # 5. (Optional) Build the project if tests depend on the build output
    # Uncomment if your tests require a prior build step
    # - name: Build project
    #   run: npm run build
